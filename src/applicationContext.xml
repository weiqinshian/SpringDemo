<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

	<!-- 拦截器对象 -->
	<bean id="methodBeforeAdviceImpl"
		class="com.xiewei.spring.example.MethodBeforeAdviceImpl">
	</bean>

	<!-- 配置拦截器 -->
	<bean id="theAdvisor"
		class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
		<property name="advice">
			<!-- 拦截器对象 -->
			<ref local="methodBeforeAdviceImpl" />
		</property>
		<!-- 拦截所有的方法 -->
		<property name="mappedName" value="*"></property>
	</bean>

	<!-- dao 实例 -->
	<bean id="dao" class="com.xiewei.spring.example.DaoImpl">
	</bean>

	<!-- service 实例 -->
	<bean id="serviceImpl"
		class="com.xiewei.spring.example.ServiceImpl">
		<!-- 
			<property name="dao" ref="dao"></property>
			<property name="dao">
			<ref bean="dao" />
			</property>
		-->
		<property name="dao">
			<bean class="com.xiewei.spring.example.DaoImpl"></bean>
		</property>
		<!-- 
			<property name="someMap">
			<map>
			<entry key="yup an entry">
			<value>just some string</value>
			</entry>
			<entry key-ref="myDataSource">
			<ref bean="myDataSource" />
			</entry>
			</map>
			</property>
		-->

	</bean>

	<bean id="service"
		class="org.springframework.aop.framework.ProxyFactoryBean">
		<!-- 拦截器 -->
		<property name="interceptorNames" value="theAdvisor"></property>
		<!-- 被拦截的对象 -->
		<property name="target">
			<ref local="serviceImpl" />
		</property>
	</bean>

	<!-- 
		<bean id="a" class="examples.A" depends-on="b"></bean>
		<bean id="b" class="examples.B"></bean>
		<bean id="c" class="examples.C" init-method="init"></bean>
		<bean id="d" class="examples.D" autowire="byType"></bean>
	-->

	<!-- 
		<bean id="bean" class="examples.Bean" dependency-check="all"></bean>
	-->

	<!-- 拦截器 在 withAop() 方法前运行 -->
	<bean id="aopMethodBeforeInterceptor"
		class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
		<property name="advice">
			<bean
				class="com.xiewei.spring.aop.MethodBeforeInterceptor" />
		</property>
		<property name="mappedName" value="withAop"></property>
	</bean>

	<!-- 拦截器 在 withAop() 返回后运行 -->
	<bean id="aopMethodAfterInterceptor"
		class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
		<property name="advice">
			<bean
				class="com.xiewei.spring.aop.MethodAfterInterceptor" />
		</property>
		<property name="mappedName" value="withAop"></property>
	</bean>

	<!-- 拦截器 在异常抛出后运行 -->
	<bean id="aopThrowsInterceptor"
		class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
		<property name="advice">
			<bean
				class="com.xiewei.spring.aop.ThrowsInterceptor" />
		</property>
		<property name="mappedName" value="withAop"></property>
	</bean>

	<bean id="aopService"
		class="org.springframework.aop.framework.ProxyFactoryBean">
		<!-- 拦截器 -->
		<property name="interceptorNames">
			<list>
				<value>aopMethodBeforeInterceptor</value>
				<value>aopMethodAfterInterceptor</value>
				<value>aopThrowsInterceptor</value>
			</list>
		</property>
		<!-- 被拦截的对象 -->
		<property name="target">
			<bean
				class="com.xiewei.spring.aop.AopServiceImpl">
				<!-- 
					<property name="name"><null /></property>
					<property name="name" value="Helloween"></property>
				-->
			</bean>
		</property>
	</bean>

	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://localhost:3306/spring?characterEncoding=UTF-8" />
		<property name="username" value="root" />
		<property name="password" value="admin" />
	</bean>



	<!-- JDBC 事务管理 -->
	<bean id="jdbcTransactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 为所有的方法配置事务 -->
	<bean id="transactionAttributeSource"
		class="org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource">
		<property name="properties">
			<props>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<!-- 
		<bean id="transactionRun"
		class="com.xiewei.spring.dao.TransactionRun">
		<property name="personDao" ref="personDao"></property>
		</bean>
	-->

	<!-- TransactionRun -->
	<bean id="transactionRun"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"
			ref="jdbcTransactionManager" />
		<property name="target">
			<bean
				class="com.xiewei.spring.dao.TransactionRun">
				<property name="personDao" ref="personDao"></property>
			</bean>
		</property>
		<property name="transactionAttributeSource"
			ref="transactionAttributeSource" />
	</bean>

	<!-- Spring SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"
		destroy-method="destroy">
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedPackages"
			value="classpath:/com/xiewei/spring/orm">
		</property>
		<property name="annotatedClasses">
			<list>
				<value>com.xiewei.spring.orm.Cat</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.hbm2ddl.auto">create</prop>
			</props>
		</property>
	</bean>



	<bean id="hibernateTransactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="hibernateTransactionAttributeSource"
		class="org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource">
		<property name="properties">
			<props>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<bean id="catService"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"
			ref="hibernateTransactionManager">
		</property>
		<property name="target">
			<bean
				class="com.xiewei.spring.orm.CatServiceImpl">
				<property name="catDao" ref="catDao"></property>
			</bean>
		</property>
		<property name="transactionAttributeSource"
			ref="hibernateTransactionAttributeSource">
		</property>
	</bean>

	<!-- 
		<bean name="/cat2" class="com.xiewei.spring.action.Cat2Action">
		<property name="catService" ref="catService"></property>
		</bean>
	-->


	<bean id="cat2BeforeInterceptor"
		class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
		<property name="advice">
			<bean
				class="com.xiewei.spring.aop.MethodBeforeInterceptor" />
		</property>
		<property name="mappedName" value="*"></property>
	</bean>

	<bean id="cat2AfterInterceptor"
		class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
		<property name="advice">
			<bean
				class="com.xiewei.spring.aop.MethodAfterInterceptor" />
		</property>
		<property name="mappedName" value="*"></property>
	</bean>

	<bean name="/cat2"
		class="org.springframework.aop.framework.ProxyFactoryBean">
		<!-- 拦截器 -->
		<property name="interceptorNames">
			<list>
				<value>cat2BeforeInterceptor</value>
				<value>cat2AfterInterceptor</value>
			</list>
		</property>
		<!-- 被拦截的对象 -->
		<property name="target">
			<bean class="com.xiewei.spring.action.Cat2Action">
				<property name="catService" ref="catService"></property>
			</bean>
		</property>
	</bean>




</beans>